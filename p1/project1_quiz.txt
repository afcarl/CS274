BMI 214
Programming Project 1 Quiz

Your name: Rory MacQueen

SUNet ID: macqueen


Instructions:
-----------------
Please be sure to run all the alignments (see 
http://bmi214.stanford.edu/files/p1/for_quiz/). Do not 
forget to include the results of this quiz in your submission.  Specifically, 
include a folder called alignments with inputs/outputs, and include your 
answers to the below problems.  See the submission instructions in the main 
Project 1 handout for complete details.

REMEMBER that you must strictly follow the instructions for naming output 
folders and files!!!

Question 1: Global alignment of two DNA sequences.
Input file: alignment0.input
Please fill in the three score matrices (the insertion, deletion, and match 
matrices). Be sure to include tracebacks (all possible ones) for aligning the 
sequence in alignment0.input. Name all your matrices and use the according 
names/symbols for the tracebacks.

Matrix M:

0.0 -inf -inf -inf -inf 
-inf 1.0 0.0 0.0 0.0 
-inf 1.0 1.0 1.0 1.0 
-inf 0.0 1.0 1.0 1.0 
-inf 0.0 2.0 2.0 1.0 
-inf 0.0 1.0 2.0 3.0 

Matrix Ix:

0.0 -inf -inf -inf -inf 
0.0 -inf -inf -inf -inf 
0.0 1.0 0.0 0.0 0.0 
0.0 1.0 1.0 1.0 1.0 
0.0 1.0 1.0 1.0 1.0 
0.0 1.0 2.0 2.0 1.0 

Matrix Iy

0.0 0.0 0.0 0.0 0.0 
-inf -inf 1.0 1.0 1.0 
-inf -inf 1.0 1.0 1.0 
-inf -inf 0.0 1.0 1.0 
-inf -inf 0.0 2.0 2.0 
-inf -inf 0.0 1.0 2.0 

Tracebacks:

Alignment: AATG_C
		   A__GGC
Path: M[5, 4] -> Iy[4, 3] -> M[4, 2] -> Ix[3, 1] -> Ix[2, 1] -> M[1, 1] -> M[0, 0]

Alignment: ATG_C
		   A_GGC
Path: M[5, 4] -> Iy[4, 3] -> M[4, 2] -> Ix[3, 1] -> M[2, 1] -> Ix[1, 0]

Alignment: AATGC
		   AG_GC
Path: M[5, 4] -> M[4, 3] -> Ix[3, 2] -> M[2, 2] -> M[1, 1] -> M[0, 0]

Alignment: AATGC
		   A_GGC
Path: M[5, 4] -> M[4, 3] -> M[3, 2] -> Ix[2, 1] -> M[1, 1] -> M[0, 0]

Alignment: ATGC
		   AGGC
Path: M[5, 4] -> M[4, 3] -> M[3, 2] -> M[2, 1] -> Ix[1, 0]

Question 2: Align the sequences in alignment1.input. Look at your results. How 
would you expect the alignment to look if you modified the gap penalties 
to be 1.5 for open and 0.5 for extend for both sequences? (Difference in the
alignment attributes, size of aligned regions, etc)

This would decrease the penalty for opening a gap, and increase the penalty for extending it. The effect of this would be for the algorithm to be more willing to open gaps, but less willing to extend them. So you would have alignments with shorter, but more frequent gap regions.

Question 3: Create the alignment2.input file from alignment1.input, except 
perform a global alignment of the same two DNA sequences with different gap 
penalties.
Input file: alignment2.input:  create this file yourself by modifying 
alignment1.input gap penalty to (1.5 0.5 1.5 0.5).
What is the alignment score? 

8.1

Question 4: Perform the alignment on Input file: alignment3.input. Based on the 
output from alignment3, what is the average number of gap characters in the 
first sequence?   
(The first sequence is the one that was on line 1 of the input file.)

Average is (4 + 3 + 5 + 4 + 5 + 4)/6 = 4.17

Question 5: 
Global alignment of the same two protein sequences with different gap 
penalties.  
Input file: alignment4.input:  create this file yourself by modifying 
alignment3.input gap penalty to (1.5 0.5 1.5 0.5)

Based on the output from alignment4, what is the average number of gap 
characters in the first sequence? If you do not succeed in aligning, explain 
what you expect to see.
(The first sequence is the one that was on line 1 of the input file.)

Average is (2 + 3)/2 = 2.5

Question 6: Global alignment of the same two protein sequences with different 
gap penalties.  
Input file: alignment5.input:  create this file yourself by modifying 
alignment3.input gap penalty to (4.5 1.5 4.5 1.5)
Alignment Score: 580.0

Question 7:
Based on the output from alignment5, what is the average number of gap 
characters in the first sequence?  If you do not succeed in aligning, explain 
what you expect to see.
(The first sequence is the one that was on line 1 of the input file.)

The only alignment I have has no gaps so the average number of gaps is 0.

Question 8:
Compare the alignments for sequences 3, 4 and 5. What are the differences you 
see? Why do you see these differences? 

As we gradually increase both the gap open and gap extension penalties, we start to see fewer
gaps introduced as we move between alignments 3, 4, and 5.

Question 9: Perform local alignment of two protein sequences with gap penalty 
(3 1 3 1).  
Input file:  alignment6.input
How much of each sequence do you see in the alignments? (We do not need an 
exact number but tell us what parts of the sequences, if any, are missing)

In both alignments, we see the entirety of the first sequence, and only about half
(the second half) of the second sequence, with a bit missing from the end of the
second sequence as well.

Question 10 : 
Why would you be interested in performing this kind of local alignment? What might you infer from the results of these two sequences (what is sequence 1 
with respect to sequence 2)?

You might perform this type of local alignment if you were trying to determine
lineage of species by examining their proteins. One might infer that sequence 2
is a descendent of sequence 1, and had since modified and expanded since it was
sequence 1. You need to do a local alignment to see this since a global alignment
might penalize it for being much shorter than sequence 1.

Question 11: Local alignment of the same two protein sequences with different 
gap penalties.  
Input file: alignment7.input:  create this file yourself by modifying 
alignment6.input gap penalty to (5 1 5 1). If you are not able to perform the 
alignments, what would you expect to see?
Alignment Score: 137.0

Question 12:
Why do you see a difference in the two alignments?

We see a difference because we changed the gap penalties. The penalty for opening
a gap in either sequence increased from 3 to 5 going from input6 to input7. As a
result, the algorithm is less inclined to open gaps, and so we see fewer gaps
in output7 than we do in output6.

Question 13:
Perform the local alignment of two DNA sequences using alignment8.input
How much of each sequence do you see? (Count the number of letters missing from 
the front and back of each sequence).

First sequence: 2 missing from front, 0 from back.
Second sequence: 11 missing from front, 5 from back.

Question 14:
Perform the local alignment of the above (DNA translated into protein) 
sequences in alignment9.input
How much of each of these sequences do you see? (Count the number of letters 
missing from the front and back of each sequence).

First sequence: 1 missing from the front; from the back, 3 alignments have 0 characters missing, and 3 of them have 5 characters missing
Second sequence: 4 missing from the front; from the back, 3 alignments have 1 character missing, and 3 of them have 4 characters missing

Question 15:
Discuss the differences between aligning DNA and aligning proteins.  Describe a scenario when you would want to use one type of alignment over the other.

The main difference between aligning DNA and aligning proteins is the alphabet size: DNA has an alphabet size of only 4,
while the alphabet of proteins is around 23. Moreover, because of this, the match matrix tends to be simpler for DNA alignments.
Because DNA is used for encoding information rather than performing some other functional role as proteins are, it is more important
that their alignments have exact matches. Therefore, we see in the match matrix that a point is awarded if a nucleotide matches
exactly, but there is quite a big negative penalty for not matching. However, in proteins, because one amino acid can be substituted
for another and the protein can still perform the same function, there is sometimes no negative penalty at all for swapping one amino
acid for another.
You might want to use DNA alignment if you are concerned with tracing the evolutionary ancestry of two species. Matching DNA would be
better for this task since it is passed directly down in generations. Similar protein alignments, on the other hand, although they 
could be indicative of genetic ancestry, could also simply be a result of two proteins performing the same function in two otherwise 
unrelated species.


Question 16:
Briefly discuss when you want to use local alignment.

One wants to use local alignments when you are dealing with two sequences which are suspected to contain similar sub-regions 
but which might have significant differences outside of that sub-region, or might simply be different in length. In these cases
you don't want to penalize too much the differences that are outside of that subregion, which is what would happen in the 
global alignment case, so you can just hone in on that similar subregion.

Question 17: 
Briefly discuss when you want to use global alignment.

If the sequences in question have comparable lengths and you are looking for an overall measure of similarity between them,
then you want to use global alignment. Global alignment algorithms will try to align every element in both sequences, and hence 
will give you an overall sense of how similar the two sequences are. 